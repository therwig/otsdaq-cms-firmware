
-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

use work.regionizer_pkg.all;
use work.algo_pkg.all;

entity algo_wrapper is
	port (
		clk : in std_logic;

		valid_in : in std_logic;
		objects_in : in raw_physics_object_arr_t(ALGO_INPUT_OBJECTS_COUNT-1 downto 0); --ALGO_INPUT_OBJECTS_COUNT constant defined in regionizer_pkg

		valid_out: out std_logic;
		results_out : out raw_algo_object_out_arr_t(ALGO_OBJECTS_OUT-1 downto 0);      --ALGO_OBJECTS_OUT constant defined in algo_pkg

		reset : in std_logic
    );
end entity algo_wrapper;

architecture behav of algo_wrapper is
begin


    process(clk)
    begin
    
        if (rising_edge(clk)) then
        
            valid_out <= valid_in;
            for i in 0 to ALGO_OBJECTS_OUT-1 loop
                results_out(i) <= objects_in(i);  
            end loop;
        end if;
    end process;

end behav;
