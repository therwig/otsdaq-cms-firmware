-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity L2sort is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_in_0_0_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_1_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_2_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_3_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_4_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_5_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_6_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_7_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_8_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_9_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_10_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_11_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_12_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_13_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_14_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_15_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_16_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_0_17_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_0_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_1_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_2_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_3_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_4_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_5_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_6_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_7_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_8_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_9_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_10_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_11_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_12_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_13_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_14_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_15_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_16_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_1_17_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_0_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_1_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_2_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_3_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_4_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_5_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_6_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_7_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_8_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_9_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_10_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_11_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_12_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_13_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_14_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_15_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_16_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_2_17_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_0_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_1_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_2_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_3_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_4_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_5_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_6_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_7_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_8_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_9_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_10_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_11_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_12_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_13_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_14_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_15_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_16_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_3_17_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_0_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_1_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_2_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_3_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_4_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_5_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_6_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_7_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_8_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_9_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_10_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_11_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_12_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_13_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_14_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_15_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_16_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_4_17_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_0_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_1_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_2_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_3_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_4_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_5_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_6_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_7_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_8_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_9_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_10_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_11_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_12_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_13_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_14_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_15_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_16_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_5_17_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_0_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_1_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_2_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_3_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_4_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_5_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_6_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_7_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_8_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_9_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_10_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_11_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_12_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_13_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_14_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_15_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_16_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_6_17_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_0_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_1_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_2_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_3_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_4_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_5_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_6_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_7_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_8_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_9_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_10_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_11_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_12_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_13_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_14_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_15_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_16_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_7_17_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_0_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_1_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_2_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_3_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_4_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_5_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_6_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_7_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_8_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_9_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_10_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_11_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_12_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_13_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_14_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_15_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_16_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_8_17_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_0_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_1_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_2_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_3_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_4_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_5_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_6_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_7_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_8_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_9_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_10_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_11_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_12_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_13_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_14_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_15_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_16_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_in_9_17_V : IN STD_LOGIC_VECTOR (63 downto 0);
    data_out_0_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_1_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_2_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_3_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_4_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_5_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_6_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_7_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_8_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_9_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_10_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_11_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_12_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_13_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_14_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_15_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_16_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_17_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_18_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_19_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_20_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_21_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_22_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_23_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_24_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_25_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_26_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_27_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_28_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    data_out_29_V : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of L2sort is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "L2sort,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=3.125000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.707000,HLS_SYN_LAT=18,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=207794,HLS_SYN_LUT=431505,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_BitonicSortOptimized_fu_1734_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_8 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_9 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_10 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_11 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_12 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_13 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_14 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_15 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_16 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_17 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_18 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_19 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_20 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_21 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_22 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_23 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_24 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_25 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_26 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_27 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_28 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_return_29 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BitonicSortOptimized_fu_1734_ap_ce : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to17 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component BitonicSortOptimized IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        work_array_0_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_1_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_2_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_3_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_4_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_5_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_6_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_7_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_8_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_9_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_10_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_11_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_12_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_13_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_14_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_15_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_16_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_17_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_18_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_19_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_20_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_21_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_22_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_23_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_24_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_25_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_26_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_27_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_28_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_29_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_30_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_31_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_32_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_33_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_34_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_35_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_36_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_37_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_38_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_39_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_40_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_41_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_42_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_43_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_44_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_45_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_46_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_47_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_48_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_49_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_50_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_51_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_52_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_53_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_54_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_55_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_56_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_57_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_58_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_59_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_60_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_61_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_62_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_63_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_64_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_65_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_66_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_67_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_68_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_69_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_70_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_71_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_72_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_73_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_74_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_75_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_76_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_77_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_78_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_79_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_80_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_81_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_82_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_83_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_84_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_85_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_86_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_87_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_88_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_89_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_90_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_91_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_92_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_93_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_94_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_95_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_96_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_97_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_98_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_99_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_100_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_101_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_102_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_103_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_104_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_105_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_106_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_107_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_108_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_109_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_110_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_111_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_112_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_113_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_114_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_115_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_116_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_117_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_118_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_119_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_120_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_121_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_122_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_123_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_124_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_125_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_126_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_127_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_128_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_129_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_130_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_131_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_132_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_133_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_134_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_135_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_136_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_137_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_138_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_139_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_140_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_141_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_142_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_143_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_144_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_145_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_146_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_147_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_148_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_149_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_150_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_151_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_152_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_153_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_154_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_155_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_156_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_157_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_158_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_159_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_160_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_161_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_162_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_163_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_164_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_165_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_166_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_167_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_168_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_169_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_170_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_171_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_172_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_173_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_174_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_175_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_176_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_177_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_178_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        work_array_179_V_read : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_BitonicSortOptimized_fu_1734 : component BitonicSortOptimized
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        work_array_0_V_read => data_in_0_0_V,
        work_array_1_V_read => data_in_0_1_V,
        work_array_2_V_read => data_in_0_2_V,
        work_array_3_V_read => data_in_0_3_V,
        work_array_4_V_read => data_in_0_4_V,
        work_array_5_V_read => data_in_0_5_V,
        work_array_6_V_read => data_in_0_6_V,
        work_array_7_V_read => data_in_0_7_V,
        work_array_8_V_read => data_in_0_8_V,
        work_array_9_V_read => data_in_0_9_V,
        work_array_10_V_read => data_in_0_10_V,
        work_array_11_V_read => data_in_0_11_V,
        work_array_12_V_read => data_in_0_12_V,
        work_array_13_V_read => data_in_0_13_V,
        work_array_14_V_read => data_in_0_14_V,
        work_array_15_V_read => data_in_0_15_V,
        work_array_16_V_read => data_in_0_16_V,
        work_array_17_V_read => data_in_0_17_V,
        work_array_18_V_read => data_in_1_0_V,
        work_array_19_V_read => data_in_1_1_V,
        work_array_20_V_read => data_in_1_2_V,
        work_array_21_V_read => data_in_1_3_V,
        work_array_22_V_read => data_in_1_4_V,
        work_array_23_V_read => data_in_1_5_V,
        work_array_24_V_read => data_in_1_6_V,
        work_array_25_V_read => data_in_1_7_V,
        work_array_26_V_read => data_in_1_8_V,
        work_array_27_V_read => data_in_1_9_V,
        work_array_28_V_read => data_in_1_10_V,
        work_array_29_V_read => data_in_1_11_V,
        work_array_30_V_read => data_in_1_12_V,
        work_array_31_V_read => data_in_1_13_V,
        work_array_32_V_read => data_in_1_14_V,
        work_array_33_V_read => data_in_1_15_V,
        work_array_34_V_read => data_in_1_16_V,
        work_array_35_V_read => data_in_1_17_V,
        work_array_36_V_read => data_in_2_0_V,
        work_array_37_V_read => data_in_2_1_V,
        work_array_38_V_read => data_in_2_2_V,
        work_array_39_V_read => data_in_2_3_V,
        work_array_40_V_read => data_in_2_4_V,
        work_array_41_V_read => data_in_2_5_V,
        work_array_42_V_read => data_in_2_6_V,
        work_array_43_V_read => data_in_2_7_V,
        work_array_44_V_read => data_in_2_8_V,
        work_array_45_V_read => data_in_2_9_V,
        work_array_46_V_read => data_in_2_10_V,
        work_array_47_V_read => data_in_2_11_V,
        work_array_48_V_read => data_in_2_12_V,
        work_array_49_V_read => data_in_2_13_V,
        work_array_50_V_read => data_in_2_14_V,
        work_array_51_V_read => data_in_2_15_V,
        work_array_52_V_read => data_in_2_16_V,
        work_array_53_V_read => data_in_2_17_V,
        work_array_54_V_read => data_in_3_0_V,
        work_array_55_V_read => data_in_3_1_V,
        work_array_56_V_read => data_in_3_2_V,
        work_array_57_V_read => data_in_3_3_V,
        work_array_58_V_read => data_in_3_4_V,
        work_array_59_V_read => data_in_3_5_V,
        work_array_60_V_read => data_in_3_6_V,
        work_array_61_V_read => data_in_3_7_V,
        work_array_62_V_read => data_in_3_8_V,
        work_array_63_V_read => data_in_3_9_V,
        work_array_64_V_read => data_in_3_10_V,
        work_array_65_V_read => data_in_3_11_V,
        work_array_66_V_read => data_in_3_12_V,
        work_array_67_V_read => data_in_3_13_V,
        work_array_68_V_read => data_in_3_14_V,
        work_array_69_V_read => data_in_3_15_V,
        work_array_70_V_read => data_in_3_16_V,
        work_array_71_V_read => data_in_3_17_V,
        work_array_72_V_read => data_in_4_0_V,
        work_array_73_V_read => data_in_4_1_V,
        work_array_74_V_read => data_in_4_2_V,
        work_array_75_V_read => data_in_4_3_V,
        work_array_76_V_read => data_in_4_4_V,
        work_array_77_V_read => data_in_4_5_V,
        work_array_78_V_read => data_in_4_6_V,
        work_array_79_V_read => data_in_4_7_V,
        work_array_80_V_read => data_in_4_8_V,
        work_array_81_V_read => data_in_4_9_V,
        work_array_82_V_read => data_in_4_10_V,
        work_array_83_V_read => data_in_4_11_V,
        work_array_84_V_read => data_in_4_12_V,
        work_array_85_V_read => data_in_4_13_V,
        work_array_86_V_read => data_in_4_14_V,
        work_array_87_V_read => data_in_4_15_V,
        work_array_88_V_read => data_in_4_16_V,
        work_array_89_V_read => data_in_4_17_V,
        work_array_90_V_read => data_in_5_0_V,
        work_array_91_V_read => data_in_5_1_V,
        work_array_92_V_read => data_in_5_2_V,
        work_array_93_V_read => data_in_5_3_V,
        work_array_94_V_read => data_in_5_4_V,
        work_array_95_V_read => data_in_5_5_V,
        work_array_96_V_read => data_in_5_6_V,
        work_array_97_V_read => data_in_5_7_V,
        work_array_98_V_read => data_in_5_8_V,
        work_array_99_V_read => data_in_5_9_V,
        work_array_100_V_read => data_in_5_10_V,
        work_array_101_V_read => data_in_5_11_V,
        work_array_102_V_read => data_in_5_12_V,
        work_array_103_V_read => data_in_5_13_V,
        work_array_104_V_read => data_in_5_14_V,
        work_array_105_V_read => data_in_5_15_V,
        work_array_106_V_read => data_in_5_16_V,
        work_array_107_V_read => data_in_5_17_V,
        work_array_108_V_read => data_in_6_0_V,
        work_array_109_V_read => data_in_6_1_V,
        work_array_110_V_read => data_in_6_2_V,
        work_array_111_V_read => data_in_6_3_V,
        work_array_112_V_read => data_in_6_4_V,
        work_array_113_V_read => data_in_6_5_V,
        work_array_114_V_read => data_in_6_6_V,
        work_array_115_V_read => data_in_6_7_V,
        work_array_116_V_read => data_in_6_8_V,
        work_array_117_V_read => data_in_6_9_V,
        work_array_118_V_read => data_in_6_10_V,
        work_array_119_V_read => data_in_6_11_V,
        work_array_120_V_read => data_in_6_12_V,
        work_array_121_V_read => data_in_6_13_V,
        work_array_122_V_read => data_in_6_14_V,
        work_array_123_V_read => data_in_6_15_V,
        work_array_124_V_read => data_in_6_16_V,
        work_array_125_V_read => data_in_6_17_V,
        work_array_126_V_read => data_in_7_0_V,
        work_array_127_V_read => data_in_7_1_V,
        work_array_128_V_read => data_in_7_2_V,
        work_array_129_V_read => data_in_7_3_V,
        work_array_130_V_read => data_in_7_4_V,
        work_array_131_V_read => data_in_7_5_V,
        work_array_132_V_read => data_in_7_6_V,
        work_array_133_V_read => data_in_7_7_V,
        work_array_134_V_read => data_in_7_8_V,
        work_array_135_V_read => data_in_7_9_V,
        work_array_136_V_read => data_in_7_10_V,
        work_array_137_V_read => data_in_7_11_V,
        work_array_138_V_read => data_in_7_12_V,
        work_array_139_V_read => data_in_7_13_V,
        work_array_140_V_read => data_in_7_14_V,
        work_array_141_V_read => data_in_7_15_V,
        work_array_142_V_read => data_in_7_16_V,
        work_array_143_V_read => data_in_7_17_V,
        work_array_144_V_read => data_in_8_0_V,
        work_array_145_V_read => data_in_8_1_V,
        work_array_146_V_read => data_in_8_2_V,
        work_array_147_V_read => data_in_8_3_V,
        work_array_148_V_read => data_in_8_4_V,
        work_array_149_V_read => data_in_8_5_V,
        work_array_150_V_read => data_in_8_6_V,
        work_array_151_V_read => data_in_8_7_V,
        work_array_152_V_read => data_in_8_8_V,
        work_array_153_V_read => data_in_8_9_V,
        work_array_154_V_read => data_in_8_10_V,
        work_array_155_V_read => data_in_8_11_V,
        work_array_156_V_read => data_in_8_12_V,
        work_array_157_V_read => data_in_8_13_V,
        work_array_158_V_read => data_in_8_14_V,
        work_array_159_V_read => data_in_8_15_V,
        work_array_160_V_read => data_in_8_16_V,
        work_array_161_V_read => data_in_8_17_V,
        work_array_162_V_read => data_in_9_0_V,
        work_array_163_V_read => data_in_9_1_V,
        work_array_164_V_read => data_in_9_2_V,
        work_array_165_V_read => data_in_9_3_V,
        work_array_166_V_read => data_in_9_4_V,
        work_array_167_V_read => data_in_9_5_V,
        work_array_168_V_read => data_in_9_6_V,
        work_array_169_V_read => data_in_9_7_V,
        work_array_170_V_read => data_in_9_8_V,
        work_array_171_V_read => data_in_9_9_V,
        work_array_172_V_read => data_in_9_10_V,
        work_array_173_V_read => data_in_9_11_V,
        work_array_174_V_read => data_in_9_12_V,
        work_array_175_V_read => data_in_9_13_V,
        work_array_176_V_read => data_in_9_14_V,
        work_array_177_V_read => data_in_9_15_V,
        work_array_178_V_read => data_in_9_16_V,
        work_array_179_V_read => data_in_9_17_V,
        ap_return_0 => grp_BitonicSortOptimized_fu_1734_ap_return_0,
        ap_return_1 => grp_BitonicSortOptimized_fu_1734_ap_return_1,
        ap_return_2 => grp_BitonicSortOptimized_fu_1734_ap_return_2,
        ap_return_3 => grp_BitonicSortOptimized_fu_1734_ap_return_3,
        ap_return_4 => grp_BitonicSortOptimized_fu_1734_ap_return_4,
        ap_return_5 => grp_BitonicSortOptimized_fu_1734_ap_return_5,
        ap_return_6 => grp_BitonicSortOptimized_fu_1734_ap_return_6,
        ap_return_7 => grp_BitonicSortOptimized_fu_1734_ap_return_7,
        ap_return_8 => grp_BitonicSortOptimized_fu_1734_ap_return_8,
        ap_return_9 => grp_BitonicSortOptimized_fu_1734_ap_return_9,
        ap_return_10 => grp_BitonicSortOptimized_fu_1734_ap_return_10,
        ap_return_11 => grp_BitonicSortOptimized_fu_1734_ap_return_11,
        ap_return_12 => grp_BitonicSortOptimized_fu_1734_ap_return_12,
        ap_return_13 => grp_BitonicSortOptimized_fu_1734_ap_return_13,
        ap_return_14 => grp_BitonicSortOptimized_fu_1734_ap_return_14,
        ap_return_15 => grp_BitonicSortOptimized_fu_1734_ap_return_15,
        ap_return_16 => grp_BitonicSortOptimized_fu_1734_ap_return_16,
        ap_return_17 => grp_BitonicSortOptimized_fu_1734_ap_return_17,
        ap_return_18 => grp_BitonicSortOptimized_fu_1734_ap_return_18,
        ap_return_19 => grp_BitonicSortOptimized_fu_1734_ap_return_19,
        ap_return_20 => grp_BitonicSortOptimized_fu_1734_ap_return_20,
        ap_return_21 => grp_BitonicSortOptimized_fu_1734_ap_return_21,
        ap_return_22 => grp_BitonicSortOptimized_fu_1734_ap_return_22,
        ap_return_23 => grp_BitonicSortOptimized_fu_1734_ap_return_23,
        ap_return_24 => grp_BitonicSortOptimized_fu_1734_ap_return_24,
        ap_return_25 => grp_BitonicSortOptimized_fu_1734_ap_return_25,
        ap_return_26 => grp_BitonicSortOptimized_fu_1734_ap_return_26,
        ap_return_27 => grp_BitonicSortOptimized_fu_1734_ap_return_27,
        ap_return_28 => grp_BitonicSortOptimized_fu_1734_ap_return_28,
        ap_return_29 => grp_BitonicSortOptimized_fu_1734_ap_return_29,
        ap_ce => grp_BitonicSortOptimized_fu_1734_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter18, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18)
    begin
        if (((ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to17_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to17 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to17)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to17 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    data_out_0_V <= grp_BitonicSortOptimized_fu_1734_ap_return_29;
    data_out_10_V <= grp_BitonicSortOptimized_fu_1734_ap_return_19;
    data_out_11_V <= grp_BitonicSortOptimized_fu_1734_ap_return_18;
    data_out_12_V <= grp_BitonicSortOptimized_fu_1734_ap_return_17;
    data_out_13_V <= grp_BitonicSortOptimized_fu_1734_ap_return_16;
    data_out_14_V <= grp_BitonicSortOptimized_fu_1734_ap_return_15;
    data_out_15_V <= grp_BitonicSortOptimized_fu_1734_ap_return_14;
    data_out_16_V <= grp_BitonicSortOptimized_fu_1734_ap_return_13;
    data_out_17_V <= grp_BitonicSortOptimized_fu_1734_ap_return_12;
    data_out_18_V <= grp_BitonicSortOptimized_fu_1734_ap_return_11;
    data_out_19_V <= grp_BitonicSortOptimized_fu_1734_ap_return_10;
    data_out_1_V <= grp_BitonicSortOptimized_fu_1734_ap_return_28;
    data_out_20_V <= grp_BitonicSortOptimized_fu_1734_ap_return_9;
    data_out_21_V <= grp_BitonicSortOptimized_fu_1734_ap_return_8;
    data_out_22_V <= grp_BitonicSortOptimized_fu_1734_ap_return_7;
    data_out_23_V <= grp_BitonicSortOptimized_fu_1734_ap_return_6;
    data_out_24_V <= grp_BitonicSortOptimized_fu_1734_ap_return_5;
    data_out_25_V <= grp_BitonicSortOptimized_fu_1734_ap_return_4;
    data_out_26_V <= grp_BitonicSortOptimized_fu_1734_ap_return_3;
    data_out_27_V <= grp_BitonicSortOptimized_fu_1734_ap_return_2;
    data_out_28_V <= grp_BitonicSortOptimized_fu_1734_ap_return_1;
    data_out_29_V <= grp_BitonicSortOptimized_fu_1734_ap_return_0;
    data_out_2_V <= grp_BitonicSortOptimized_fu_1734_ap_return_27;
    data_out_3_V <= grp_BitonicSortOptimized_fu_1734_ap_return_26;
    data_out_4_V <= grp_BitonicSortOptimized_fu_1734_ap_return_25;
    data_out_5_V <= grp_BitonicSortOptimized_fu_1734_ap_return_24;
    data_out_6_V <= grp_BitonicSortOptimized_fu_1734_ap_return_23;
    data_out_7_V <= grp_BitonicSortOptimized_fu_1734_ap_return_22;
    data_out_8_V <= grp_BitonicSortOptimized_fu_1734_ap_return_21;
    data_out_9_V <= grp_BitonicSortOptimized_fu_1734_ap_return_20;

    grp_BitonicSortOptimized_fu_1734_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_BitonicSortOptimized_fu_1734_ap_ce <= ap_const_logic_1;
        else 
            grp_BitonicSortOptimized_fu_1734_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

end behav;
